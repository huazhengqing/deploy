#######################################################
# ubuntu 

1. 换源
2. sudo apt install -y gcc make perl


ulimit -n
ulimit -n 65536
ulimit -n


#######################################################
# mount

tee $HOME/mount.sh <<-'EOF'
sudo mkdir -p /mnt/dev/
cd /mnt/
sudo mount -t vboxsf   dev  ./dev/
cd
EOF

sudo chmod +x $HOME/*.sh


ln -sf /mnt/dev/go    $HOME/go
ln -sf /mnt/dev    $HOME/dev


cd /etc/init.d/ 
sudo tee user.sh <<-'EOF'
#!/bin/bash
sudo $HOME/mount.sh
exit 0
EOF
sudo chmod +x *.sh

sudo update-rc.d user.sh defaults 99

#######################################################
# wubi

sudo apt-get install -y ibus ibus-table ibus-table-wubi
sudo apt-get install -y vlc browser-plugin-vlc

#######################################################
# git

sudo apt-get install -y  git
add-apt-repository ppa:git-core/ppa
apt update
sudo apt-get install -y  git git-gui gitk

#######################################################
# team viewer

cd $HOME/dev/software/
sudo dpkg -i teamviewer_13.1.3026_amd64.deb
sudo apt-get install -f

#######################################################
# chrome

sudo wget https://repo.fdzh.org/chrome/google-chrome.list -P /etc/apt/sources.list.d/  
sudo wget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -
sudo apt-get update  
sudo apt-get install -y   google-chrome-stable    
/usr/bin/google-chrome-stable


#######################################################
# c++ tools

sudo apt install -y net-tools openssh-server debconf

sudo apt-get install -y gcc make autoconf libtool automake curl g++ unzip build-essential pkg-config libc++-dev 
sudo apt-get install -y libgflags-dev libgtest-dev libssl-dev libevent-dev libjpeg-dev libxml2-dev   clang libc++-dev libsnappy-dev   libbz2-dev libltdl-dev mpi-default-dev libicu-dev python-dev python3-dev   


#######################################################
# ubuntu shadowsocks

sudo apt-get update
sudo apt-get install -y python-pip
sudo apt-get install -y python-setuptools m2crypto
sudo apt install -y shadowsocks

tee $HOME/shadowsocks.json <<-'EOF'
{
    "server":"47.90.39.190",
    "server_port": 10010,
    "local_port":1080,
    "password":"dSyHGFfGFFvB",
    "timeout":600,
    "method":"aes-256-cfb"
}
EOF

tee $HOME/my_sh/shadowsocks_start.sh <<-'EOF'
sudo nohup sslocal -c $HOME/shadowsocks.json > /dev/null 2>1 &
ps -ef |grep sslocal
sudo service privoxy restart
EOF

sudo chmod +x $HOME/*.sh

sudo apt-get install -y python-pip
sudo pip install genpac
sudo pip install --upgrade genpac


genpac --proxy="SOCKS5 127.0.0.1:1080" -o autoproxy.pac --gfwlist-url="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt"

genpac --format=pac --pac-proxy="SOCKS5 127.0.0.1:1080" --gfwlist-local=~/gfwlist.txt --gfwlist-update-local -o autoproxy.pac

系统设置 --> 网络 --> 网络代理 
自动
file:///home/dev/autoproxy.pac


export http_proxy="http://127.0.0.1:1080/"
export https_proxy="http_proxy://127.0.0.1:1080/"


#######################################################
# ubuntu vscode

wget https://vscode.cdn.azure.cn/stable/79b44aa704ce542d8ca4a3cc44cfca566e7720f1/code_1.21.1-1521038896_amd64.deb
sudo dpkg -i code_1.21.1-1521038896_amd64.deb
sudo apt-get install -f  

cat /proc/sys/fs/inotify/max_user_watches

sudo tee /etc/sysctl.conf <<-'EOF'
fs.inotify.max_user_watches=524288
EOF

sudo sysctl -p

#######################################################
# ubuntu nautilus

sudo add-apt-repository ppa:vascofalves/gnome-backports
sudo apt-get update
sudo apt-get install -y nautilus gksu nemo  

xhost +
sudo nemo 


tee $HOME/root_dir.sh <<-'EOF'
xhost +
sudo nemo
EOF

sudo chmod +x $HOME/*.sh


#######################################################
# Java

sudo apt-get install -y default-jre
sudo apt-get install -y default-jdk

sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install -y oracle-java8-installer
sudo apt-get install -y oracle-java8-set-default

.bashrc

JAVA_HOME=/usr/java/jdk1.8.0_101
JRE_HOME=$JAVA_HOME/jre
JAVA_BIN=$JAVA_HOME/bin
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
export JAVA_HOME JRE_HOME PATH CLASSPATH

JAVA_HOME=/usr/lib/jvm/java-8-oracle

java -version

#######################################################
# nodejs

sudo npm cache clean -f
sudo npm install -y -g n
sudo n stable
sudo n lts


sudo npm config set registry https://registry.npm.taobao.org
sudo npm config list


#######################################################
# python

sudo apt-get install -y python-software-properties  
sudo add-apt-repository ppa:fkrull/deadsnakes  
sudo apt-get update  

sudo apt-get install -y python python-pip python-setuptools m2crypto
sudo apt-get install -y python-dev libmysqlclient-dev  python-matplotlib

pip install mysql-python
pip install ccxt

#######################################################
# git

sudo add-apt-repository ppa:git-core/ppa
sudo apt update
sudo apt install -y git

#######################################################
# go

sudo apt-get --purge remove golang
sudo rm -rf /usr/local/go

wget https://dl.google.com/go/go1.10.1.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.10.1.linux-amd64.tar.gz

vi /etc/profile

export GOPATH=$HOME/go
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

source /etc/profile

#######################################################
# go 3lib

mkdir -p $GOPATH/src/github.com/looplab/
cd $GOPATH/src/github.com/looplab/
git clone  https://github.com/looplab/fsm.git

mkdir -p $GOPATH/src/github.com/cloudflare/
cd $GOPATH/src/github.com/cloudflare/
https://github.com/cloudflare/cfssl.git


mkdir -p $GOPATH/src/github.com/
cd $GOPATH/src/github.com/
git clone  https://github.com/shijuvar/go-recipes.git


go get -v github.com/ramya-rao-a/go-outline
go get -v github.com/rogpeppe/godef
go get -v github.com/nsf/gocode 
go get -v github.com/ramya-rao-a/go-outline
go get -v github.com/acroca/go-symbols
go get -v golang.org/x/tools/cmd/guru
go get -v golang.org/x/tools/cmd/gorename 
go get -v github.com/golang/lint/golint
go get -v sourcegraph.com/sqs/goreturns
go get -v github.com/derekparker/delve
go get -v github.com/uudashr/gopkgs/cmd/gopkgs
go get -u github.com/cloudflare/cfssl

go install github.com/nsf/gocode
go install github.com/rogpeppe/godef
go install github.com/zmb3/gogetdoc
go install github.com/golang/lint/golint
go install github.com/lukehoban/go-outline
go install sourcegraph.com/sqs/goreturns
go install golang.org/x/tools/cmd/gorename
go install github.com/tpng/gopkgs
go install github.com/newhook/go-symbols
go install github.com/cweill/gotests/...
go install golang.org/x/tools/cmd/guru
go install github.com/derekparker/delve/cmd/dlv



#######################################################
# protobuf 

sudo apt-get remove libprotobuf-dev 

mkdir -p $GOPATH/src/github.com/google/
cd $GOPATH/src/github.com/google/
git clone  https://github.com/google/protobuf.git

cd protobuf/
./autogen.sh
./configure
make
make check 
sudo make install
sudo ldconfig


#######################################################
# grpc

go get -u github.com/golang/protobuf/{proto,protoc-gen-go}
go get -u github.com/golang/lint/golint
go get -u golang.org/x/lint/
go get -u golang.org/x/lint/golint
go get -u golang.org/x/text/secure/bidirule
go get -u golang.org/x/text/unicode/bidi
go get -u golang.org/x/text/unicode/norm
go get -u google.golang.org/genproto/googleapis/rpc/status
go get -u google.golang.org/grpc


npm install grpc
pip install grpcio
pecl install grpc
gem install grpc


mkdir -p $GOPATH/src/github.com/grpc/
cd $GOPATH/src/github.com/grpc/
git clone   https://github.com/grpc/grpc-go.git

cd grpc-go
git submodule update --init
make


#######################################################
# grpc   example

mkdir -p $GOPATH/src/github.com/
cd $GOPATH/src/github.com/


git clone       https://github.com/jergoo/go-grpc-example.git
git clone       https://github.com/smallnest/grpc-examples.git
git clone       https://github.com/philips/grpc-gateway-example.git

git clone       https://github.com/grpc-ecosystem/grpc-gateway.git
git clone       https://github.com/grpc-ecosystem/go-grpc-middleware.git
git clone       


#######################################################
# docker

sudo apt-get remove docker docker-engine docker.io
sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get -y update
sudo apt-get -y install docker-ce
sudo docker version

sudo groupadd docker
sudo usermod -aG docker $USER

sudo chown "$USER":"$USER" /home/"$USER"/.docker -R
sudo chmod g+rwx "/home/$USER/.docker" -R

sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker.service

sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json <<-'EOF'
{
  "registry-mirrors": ["https://kag0brah.mirror.aliyuncs.com"]
}
EOF
sudo cat /etc/docker/daemon.json

sudo systemctl daemon-reload
sudo systemctl restart docker


sudo apt-cache madison docker-ce
sudo apt-get install -y docker-ce=<VERSION>

sudo ps aux |grep dockerd

env | grep DOCKER_HOST

#######################################################
# docker-compose

sudo apt-get install -y python-pip 

sudo pip uninstall docker-compose
sudo curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo docker-compose --version

#######################################################
# docker kitematic

https://github.com/docker/kitematic/releases
https://kitematic.com/docs/


#######################################################
# swagger

tee $HOME/swagger_up.sh <<-'EOF'
docker pull swaggerapi/swagger-editor
docker images | grep "swaggerapi"
docker run -d -p 80:8080 swaggerapi/swagger-editor
docker ps -a
sudo netstat -npl | grep 80
EOF

tee $HOME/swagger_down.sh <<-'EOF'
docker ps -a
docker rm -f $(docker ps -a | grep "swaggerapi" | awk '{print $1}')
docker ps -a
EOF

cd $HOME/
sudo chmod +x *.sh


#######################################################
# Web Assembly

git clone https://github.com/juj/emsdk.git
cd emsdk
./emsdk install latest
./emsdk activate latest

./emsdk install --build=Release sdk-incoming-64bit binaryen-master-64bit
./emsdk activate --build=Release sdk-incoming-64bit binaryen-master-64bit

source ./emsdk_env.sh --build=Release

#######################################################



















